{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/prayer-suggestion.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview An AI agent that suggests a prayer based on the current time of day.\n *\n * - suggestPrayer - A function that suggests a prayer based on the current time of day.\n * - SuggestPrayerInput - The input type for the suggestPrayer function.\n * - SuggestPrayerOutput - The return type for the suggestPrayer function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SuggestPrayerInputSchema = z.object({\n  currentTime: z\n    .string()\n    .describe('The current time of day in ISO 8601 format (e.g. 2024-07-22T10:00:00Z).'),\n});\nexport type SuggestPrayerInput = z.infer<typeof SuggestPrayerInputSchema>;\n\nconst SuggestPrayerOutputSchema = z.object({\n  prayerSuggestion: z\n    .string()\n    .describe('A suggested prayer appropriate for the current time of day.'),\n  reasoning: z\n    .string()\n    .describe('The reasoning behind the prayer suggestion, including why it is appropriate for the given time.'),\n});\nexport type SuggestPrayerOutput = z.infer<typeof SuggestPrayerOutputSchema>;\n\nexport async function suggestPrayer(input: SuggestPrayerInput): Promise<SuggestPrayerOutput> {\n  return suggestPrayerFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'suggestPrayerPrompt',\n  input: {schema: SuggestPrayerInputSchema},\n  output: {schema: SuggestPrayerOutputSchema},\n  prompt: `You are a knowledgeable guide on Hindu prayers, particularly those appropriate for offering to cows at a dairy farm.\n\n  Based on the current time, suggest a prayer that would be meaningful and appropriate for a visitor to offer to the holy cows at RamDairyFarm farm.\n\n  Current Time: {{{currentTime}}}\n\n  Consider the time of day and suggest a prayer that aligns with the activities and significance of that time in relation to cow worship.\n  Explain your reasoning for suggesting this particular prayer. Be concise and respectful.\n  `,\n});\n\nconst suggestPrayerFlow = ai.defineFlow(\n  {\n    name: 'suggestPrayerFlow',\n    inputSchema: SuggestPrayerInputSchema,\n    outputSchema: SuggestPrayerOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n\n"],"names":[],"mappings":";;;;;IA8BsB","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/prayer/prayer-form.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Loader2, AlertTriangle, Sparkles, Clock } from 'lucide-react';\nimport { suggestPrayer, type SuggestPrayerOutput } from '@/ai/flows/prayer-suggestion';\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function PrayerForm() {\n  const [loading, setLoading] = useState(false);\n  const [suggestion, setSuggestion] = useState<SuggestPrayerOutput | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [currentTime, setCurrentTime] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    // Set current time on client mount to avoid hydration mismatch for new Date()\n    setCurrentTime(new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }));\n  }, []);\n\n\n  const handleSuggestPrayer = async () => {\n    setLoading(true);\n    setError(null);\n    setSuggestion(null);\n\n    try {\n      const now = new Date().toISOString();\n      const result = await suggestPrayer({ currentTime: now });\n      setSuggestion(result);\n      toast({\n        title: \"Prayer Suggested\",\n        description: \"A prayer has been suggested for the current time.\",\n      });\n    } catch (err) {\n      console.error('Error suggesting prayer:', err);\n      const errorMessage = err instanceof Error ? err.message : 'An unknown error occurred.';\n      setError(`Failed to get prayer suggestion: ${errorMessage}`);\n      toast({\n        title: \"Error\",\n        description: `Failed to get prayer suggestion: ${errorMessage}`,\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto\">\n      <Card className=\"shadow-xl\">\n        <CardHeader className=\"text-center\">\n          <Sparkles className=\"w-12 h-12 text-primary mx-auto mb-3\" />\n          <CardTitle className=\"font-headline text-3xl text-foreground\">Prayer Suggestion Tool</CardTitle>\n          <CardDescription className=\"text-lg text-muted-foreground\">\n            Get an AI-powered prayer suggestion appropriate for the current time of day to offer to our holy cows.\n          </CardDescription>\n          {currentTime && (\n            <div className=\"flex items-center justify-center text-sm text-muted-foreground mt-2\">\n              <Clock className=\"w-4 h-4 mr-1.5\" /> Current Time: {currentTime}\n            </div>\n          )}\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <Button\n            onClick={handleSuggestPrayer}\n            disabled={loading}\n            className=\"w-full text-lg py-6 shadow-md hover:shadow-lg transition-shadow\"\n            size=\"lg\"\n          >\n            {loading ? (\n              <>\n                <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n                Getting Suggestion...\n              </>\n            ) : (\n              'Suggest a Prayer'\n            )}\n          </Button>\n\n          {error && (\n            <div className=\"mt-4 p-4 bg-destructive/10 border border-destructive/20 text-destructive rounded-md flex items-start\">\n              <AlertTriangle className=\"h-5 w-5 mr-2 shrink-0 mt-0.5\" />\n              <div>\n                <p className=\"font-semibold\">Error</p>\n                <p className=\"text-sm\">{error}</p>\n              </div>\n            </div>\n          )}\n\n          {suggestion && (\n            <Card className=\"mt-6 bg-primary/5 border-primary/20\">\n              <CardHeader>\n                <CardTitle className=\"font-headline text-2xl text-primary\">Suggested Prayer:</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <p className=\"text-lg text-foreground leading-relaxed whitespace-pre-wrap\">\n                  {suggestion.prayerSuggestion}\n                </p>\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-1\">Reasoning:</h4>\n                  <p className=\"text-muted-foreground text-sm leading-relaxed whitespace-pre-wrap\">\n                    {suggestion.reasoning}\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}